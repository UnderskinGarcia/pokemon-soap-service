
services:
  postgres:
    image: postgres:15-alpine
    container_name: pokemon-postgres
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pokemon-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  pokemon-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pokemon-service
    env_file:
      - .env
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-default}
    ports:
      - "${APP_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pokemon-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  pokemon-network:
    driver: bridge