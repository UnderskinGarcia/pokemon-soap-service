
services:
  postgres:
    image: postgres:15-alpine
    container_name: pokemon-postgres
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${DOCKER_POSTGRES_PORTS}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/01-init.sql
    networks:
      - pokemon-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  sonarqube:
    image: sonarqube:latest
    container_name: pokemon-sonarqube
    env_file:
      - .env
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/${SONAR_DB}
      SONAR_JDBC_USERNAME: ${POSTGRES_USER}
      SONAR_JDBC_PASSWORD: ${POSTGRES_PASSWORD}
      SONAR_ADMIN_USERNAME: ${SONAR_ADMIN_USERNAME}
      SONAR_ADMIN_PASSWORD: ${SONAR_ADMIN_PASSWORD}
    ports:
      - "${DOCKER_SONARQUBE_PORT:-9000}:9000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pokemon-network
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/api/system/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  pokemon-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pokemon-service
    env_file:
      - .env
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-default}
    ports:
      - "${DOCKER_APP_PORTS}"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pokemon-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  sonarqube_data:
    driver: local
  sonarqube_logs:
    driver: local
  sonarqube_extensions:
    driver: local

networks:
  pokemon-network:
    driver: bridge