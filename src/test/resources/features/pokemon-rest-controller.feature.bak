Feature: Pokemon REST Controller Endpoints
  As a REST API client
  I want to call REST endpoints to retrieve Pokemon data
  So that I can access Pokemon information in JSON format

  Background:
    Given the Pokemon REST API is available
    And the Pokemon API client is mocked

  Scenario Outline: Successfully fetch Pokemon by valid name
    Given I have mocked Pokemon data for "<pokemonName>" with id <expectedId>
    When I call GET "/pokemon/<pokemonName>"
    Then the response status should be 200
    And the response should be in JSON format
    And the response should contain id value <expectedId>
    And the response should contain name value "<pokemonName>"
    And the response should contain base_experience value <baseExp>
    And the response should contain abilities array

    Examples:
      | pokemonName | expectedId | baseExp |
      | pikachu     | 25         | 112     |
      | bulbasaur   | 1          | 64      |
      | charmander  | 4          | 62      |
      | squirtle    | 7          | 63      |

  Scenario Outline: Return error for non-existent Pokemon
    Given the Pokemon "<pokemonName>" does not exist in the API
    When I call GET "/pokemon/<pokemonName>"
    Then the response status should be 404

    Examples:
      | pokemonName              |
      | nonexistentpokemon123456 |
      | invalidpokemonname       |
      | pokemon-does-not-exist   |

  Scenario: Handle case-insensitive Pokemon names
    Given I have mocked Pokemon data for "pikachu" with id 25
    When I call GET "/pokemon/PIKACHU"
    Then the response status should be 200
    And the response should contain id value 25
    And the response should contain name value "pikachu"

  Scenario: Return Pokemon with abilities array
    Given I have mocked Pokemon "pikachu" with 2 abilities:
      | ability        | url                            |
      | static         | https://pokeapi.co/api/v2/ability/9/ |
      | lightning-rod  | https://pokeapi.co/api/v2/ability/31/ |
    When I call GET "/pokemon/pikachu"
    Then the response status should be 200
    And the response should contain 2 abilities
    And the first ability should be "static"
    And the second ability should be "lightning-rod"

  Scenario: Return Pokemon with held items
    Given I have mocked Pokemon "pikachu" with held item:
      | name       | url                           |
      | light-ball | https://pokeapi.co/api/v2/item/213/ |
    When I call GET "/pokemon/pikachu"
    Then the response status should be 200
    And the response should contain 1 held item
    And the held item should be "light-ball"

  Scenario: Return Pokemon with location area encounters URL
    Given I have mocked Pokemon "pikachu" with location encounters "https://pokeapi.co/api/v2/pokemon/25/encounters"
    When I call GET "/pokemon/pikachu"
    Then the response status should be 200
    And the response should contain location_area_encounters value "https://pokeapi.co/api/v2/pokemon/25/encounters"
    And the response should contain "encounters"

  Scenario: Handle empty Pokemon name gracefully
    When I call GET "/pokemon/"
    Then the response status should be 404

  Scenario: Handle BadRequestException
    Given the Pokemon "invalid" triggers a BadRequestException
    When I call GET "/pokemon/invalid"
    Then the response status should be 400
